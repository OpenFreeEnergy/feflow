name: "CI"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    # At 07:00 UTC on Monday and Thursday.
    - cron: "0 7 * * *"
  release:
    types:
      - published

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  tests:
    runs-on: ${{ matrix.os }}-latest
    name: "💻-${{matrix.os }} 🐍-${{ matrix.python-version }}"
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu"]
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
        include:
          - os: "macos"
            python-version: "3.11"
    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup Micromamba"
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: feflow-env
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=${{ matrix.python-version }}
          init-shell: bash

      - name: "Install"
        run: python -m pip install --no-deps -e .

      - name: "Test imports"
        run: |
          # if we add more to this, consider changing to for + env vars
          python -Ic "import feflow; print(feflow.__version__)"

      - name: "Environment Information"
        run: |
          micromamba info
          micromamba list

      - name: Decrypt OpenEye license
        shell: bash -l {0}
        env:
          OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
        run: |
          echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}
          python -c "import openeye; assert openeye.oechem.OEChemIsLicensed(), 'OpenEye license checks failed!'"

      - name: "Run tests"
        env:
          # Set the OFE_SLOW_TESTS to True if running a Cron job
          OFE_SLOW_TESTS: ${{ fromJSON('{"false":"false","true":"true"}')[github.event_name != 'pull_request'] }}
        run: |
          pytest -n auto -v --cov=feflow --cov-report=xml --durations=10

      - name: codecov
        if: ${{ github.repository == 'choderalab/feflow'
                && github.event_name == 'pull_request' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: False
          verbose: True
